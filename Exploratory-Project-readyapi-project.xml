<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d2025846-27ac-4e30-ba82-0b4fe97035eb" created="3.48.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="Exploratory Project" projectVersion="" updated="3.48.0 2023-08-30T15:44:06Z" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:testSuite id="22e451c3-76eb-4718-9f10-243849cfe659" name="Test Suite 1">
    <con:settings id="e07fc323-9455-4ea1-9835-f07cfb2cc9fe"/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="39a03a43-69b8-49d8-9144-746f14594d33" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Test Case 1" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="5cdba285-1ce1-450c-a164-4397fe26403f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunListener

def testCase = testRunner.testCase
def context = new WsdlTestRunContext(testCase)
def listener = new WsdlTestRunListener(context, new StringToStringMap())

def githubRepoUrl = 'https://github.com/merari86/TestSuiteDemo''

def response = context.getHttpResponse(githubRepoUrl)
def responseStatus = response.getStatus()

log.info("Response Status: ${responseStatus}")</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
